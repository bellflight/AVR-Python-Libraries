name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  pypi-publish:
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write

    if: "${{!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'pypi skip')}}"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Python Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.config/pypoetry
            ~/.cache/pip
          key: python-pkgs-${{ hashFiles('pyproject.toml') }}
          restore-keys: python-pkgs

      - name: Install poetry/vscode-task-runner
        run: |
          pipx install poetry
          pipx install vscode-task-runner

      - name: Install Python Dependencies
        run: vtr poetry-install

      - name: Build Package
        run: vtr build

      - name: Get version
        run: echo "PROJECT_VERSION=$(poetry version --short)" >> $GITHUB_ENV

      - name: Create tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ env.PROJECT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.PROJECT_VERSION }}

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  docs-build:
    runs-on: ubuntu-latest
    if: "${{!contains(github.event.head_commit.message, 'ci skip')}}"
    # make sure publish worked
    # needs: pypi-publish

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build Docs
        uses: devcontainers/ci@v0.3
        with:
          runCmd: vtr build-code-docs
          env: |
            BASE_URL=${{ steps.pages.outputs.base_url }}


      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  docs-deploy:
    runs-on: ubuntu-latest
    if: "${{!contains(github.event.head_commit.message, 'ci skip')}}"
    # make sure build ran first
    needs: docs-build

    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
